<?php
  /**
  * Modulo para la gestión de los entes planificadores
  * Sistema Automatizado para la Planificación Estratégico-Situacional en la Administración Pública Venezolana
  * @file ente_planificador.module
  * Drupal part Module to code ente planificador module
  * Copyright 2011 Sistema Automatizado para la Planificación Estratégico-Situacional en la Administración Pública Venezolana (CENDITEL)
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  * 
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  * 
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  *
  * @author Cenditel Mérida TSU- Miguel Angel Narvaez Montilva
  * @see http://www.cenditel.gob.ve/
  * @see http://planificacion.cenditel.gob.ve/
  */

/*
 * Implementation of hook permission()
 */
// permisos administrativos para acceder al modulo 
function ente_planificador_permission() {
  return array(
    'admin planificador' => array(
      'title' => t('Access to the  module Ente Planificador'),
      'description' => t('Possibility of accessing to work with the module ente planificador and the functionalities incorporated in it.'),
    ),
  );
}

/*
 * Implementation of hook_help
 */
// ayuda del modulo 
function ente_planificador_help($path, $arg) {
  switch ($path) {
  // Ayuda general para el módulo Importar Terminos
    case 'admin/help#ente_planificador':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' .'The Ente PLanificador module allows registered users to register their entities'. '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<h3>' . t('help of the module Ente planificador ') . '</h3>'.'<br>';
      $output .= '<h4>' . t('Objetive of module:') . '</h4>';
      $output .= '<h4>' . t('Technical support') . '</h4>';
      $output .='<p>' . t('Contact us on the web for technical support or any questions <a href="@cenditel">cenditel</a>.', array('@cenditel' => url('http://planificacion.cenditel.gob.ve/contactos/'))) . '</p>';
    return $output;
  }  
}

//se crea el tipo de contenido ente planificador con el hook_node_info & hook_form
/*
 * Implementation of hook_node_info()
 */
function ente_planificador_node_info() {
  return array(
    'ente_planificador' => array(
      'name' => t('Ente Planificador'),
      'base' => 'ente_planificador',
      'description' => t('Ente planificador for Drupal 7.'),
    ),
  );
}

/*
 * Implementation of hook_form()
 */
function ente_planificador_form($node, &$form_state) {
}

/*
 * implementation of hook_menu()
 */
function ente_planificador_menu(){
  $items['administrar/entes_planificadores'] = array(    // <-- enlace url al modulo 
    'title' => 'Consultar lista de actores planificadores', // <-- titulo de hipervinculo en panel 
    'page callback' => 'entes_planificadores_views_list', 
    'access arguments' => array('admin planificador'), //acceso restringido por hook  permission
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['entes_planificadores/registrar'] = array(
    'title' => 'Registrar Actores Planificadores',
    'page callback' => 'entes_planificadores_agregar',
    'access arguments' => array('admin planificador'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/ente_planificador'] = array(
    'title' => t('Configuración Ente Planificador'),
    'description' => t('Configuración del Ente Planificador.'),
    'access callback'=> TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/ente_planificador/view'] = array(
    'title' => t('Ente Planificador'),
    'description' => t('Configuración del Ente Planificador.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ente_planificador_admin_settings_form'),
    'access callback'=> TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  //Item required to include tab in configuration ente planificador
  $items['admin/settings/ente_planificador/view/2'] = array(
    //'title' =>  t('Configurar'),
    'access callback'=> TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => -10
  );

  $items['admin/settings/ente_planificador/view/1'] = array(
    'title' => t('Configuración de views'),
    'description' => t('Configuración de views del Ente Planificador.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ente_planificador_admin_settings_form'),
    'access callback'=> TRUE,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -12
  );

  return $items;
}

/*
 * entes_planificadores_views_list
 * Lista de actores planificadores
 */
function entes_planificadores_views_list(){
//call the name and display of view can see in this function this is controller for ente_planificador_admin_settings_form
  $view_name = (variable_get('views', NULL)) ? variable_get('views', NULL) : 'list_actores_planificador';
  $view_page = (variable_get('views_display', NULL)) ? variable_get('views_display', NULL) : 'default';
  $view = views_get_view($view_name);
  $view->set_display($view_page);
  $view->pre_execute();
  $view->execute();
  $output = $view->render();
  return $output;
}

/**
 *
 * entes_planificadores_agregar
 * Agregar un ente planificador
 */
function entes_planificadores_agregar() {
  drupal_goto('node/add/ente-planificador');
}

/*
 * Implementation of hook_form()
 */
function ente_planificador_admin_settings_form($form, &$form_state){
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('List of views to manage in the system'),
  );

  $options = array();
  $views = views_get_all_views();
  foreach ($views as $view) {
    $options[$view->name] = $view->human_name;
  }

  // form of select the list of views 
  $form['views'] = array(
    '#type'             => 'select',
    '#default_value'    => variable_get('views', NULL),
    '#required'         =>TRUE,
    '#title'            => t('selected the views.'),
    '#options'          => $options,
    '#description'      => t('List of available views '),
    '#ajax' => array(
      'callback' => 'ente_planificador_views_ajax_display', 
      'wrapper' => 'ajax_datos1', 
      'effect' => 'fade',
      'event' => 'change',
      'method' => 'replace',
    ),
  );

  $form['views_container'] = array(
    '#type' => 'container', 
    '#prefix' => '<div id="ajax_datos1">',
    '#suffix' => '</div>',
  );

  if (isset($form_state['values']['views']) || (variable_get('views', NULL))){

    $name = (isset($form_state['values']['views'])) ? $form_state['values']['views'] : variable_get('views', NULL);
    //$name = $form_state['values']['views'];
    $view =  views_get_view($name, 0);
    foreach ($view->display as $key => $display){
      $options_display[$key] = $display->display_title;
    }

    $form['views_container']['views_display'] = array(
      '#type'             => 'select',
      '#required'         =>TRUE,
      '#title'            => t('selected the type of view.'),
      '#default_value'    => variable_get('views_display', NULL),//call the value of form for system_settings_form 
      '#options'          => $options_display,
      '#description'      => t('List of available types of views'),
    );
  }
  $form = system_settings_form($form);//autosave information of the form.
  return $form;
}

/*
 * Implementation of function ente_planificador_ajax1   
 */ 
function ente_planificador_views_ajax_display($form, &$form_state) {
  return $form['views_container'];
}

/**
 * Implementation of hook_views_api().
 */
function ente_planificador_views_api($module = NULL, $api = NULL) {
  return array(
    'api' => '3',
    'path' => drupal_get_path('module', 'ente_planificador') . '/views',
  );
}
